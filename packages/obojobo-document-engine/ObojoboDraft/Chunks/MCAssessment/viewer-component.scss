@import '~styles/includes';

.obojobo-draft--chunks--mc-assessment {
	$color-border: transparentize($color-shadow, 0.25);

	@keyframes obojobo-draft--chunks--mc-assessment--fadein {
		0% {
			opacity: 0;
		}

		100% {
			opacity: 1;
		}
	}

	@keyframes obojobo-draft--chunks--mc-assessment--bounce {
		0% {
			transform: scale(0);
		}

		50% {
			transform: scale(1.1);
		}

		80% {
			transform: scale(0.9);
		}

		100% {
			transform: scale(1);
		}
	}

	@mixin correct() {
		content: '✔';
		position: absolute;
		top: 0.65em;
		display: block;
		color: $color-correct;
		font-size: 2.5em;
		transform: translate(-50%, -50%);
		left: 0.6em;
		animation: obojobo-draft--chunks--mc-assessment--fadein $duration-animation-default * 2;
	}

	@mixin incorrect() {
		content: '✖';
		position: absolute;
		top: 0.65em;
		display: block;
		color: $color-incorrect;
		font-size: 2.5em;
		transform: translate(-50%, -50%);
		left: 0.6em;
		animation: obojobo-draft--chunks--mc-assessment--fadein $duration-animation-default * 2;
	}

	padding-bottom: 0;

	.obojobo-draft--chunks--mc-assessment--mc-choice {
		border-bottom: 1px solid $color-border;
		padding-top: 0;
		padding-bottom: 0;
	}

	.obojobo-draft--chunks--mc-assessment--mc-answer {
		padding-top: 0;
		padding-bottom: 0;
	}

	.instructions {
		$font-size: 1em;

		padding-left: $dimension-padding;
		padding-right: $dimension-padding;
		content: 'Practice';
		display: block;
		font-family: var(--font-default);
		color: $color-action;
		font-size: $font-size;
		font-weight: normal;
		border-bottom: 1px solid $color-border;
	}

	.submit-and-result-container {
		margin-left: 3em;
		min-height: 4em;
		display: table;
	}

	.submit {
		margin-left: 0;
		margin-right: 0;
		position: relative;
		display: inline-block;

		button {
			cursor: pointer;
			font-size: 0.85em;
			margin-bottom: 1em;
			margin-top: 1em;
			min-width: 10.5em;
		}

		.divider {
			color: $color-shadow;
			display: inline-block;
			padding: 0 0.4em;
			transform: scale(2, 0.9);
		}
	}

	.result-container {
		display: table-cell;
		position: relative;
		vertical-align: middle;
		padding-right: 1em;

		.pick-all-instructions {
			font-family: var(--font-default);
			font-size: 0.8em;
			font-weight: bold;
			color: $color-incorrect;
			width: 24em;
			display: inline-block;
			line-height: 1.5em;
			vertical-align: middle;
			margin-left: 1.25em;
		}

		.result {
			font-family: var(--font-default);
			color: $color-bg;
			font-weight: bold;
			box-sizing: border-box;
			margin: 0;
			display: inline-block;
			border-radius: 9999px;
			padding: 0 1.5em;
			font-size: 0.8em;
			animation: obojobo-draft--chunks--mc-assessment--bounce 0.4s;

			&.correct {
				background-color: $color-correct;
			}

			&.incorrect {
				background-color: $color-incorrect;
			}
		}
	}

	.solution {
		background: $color-bg2;
		border-top: 1px solid $color-shadow;
		position: relative;
		border-bottom-left-radius: 0.3em;
		border-bottom-right-radius: 0.3em;
		padding-bottom: 1px; /* stylelint-disable-line unit-blacklist */

		> .obojobo-draft--components--button {
			margin-bottom: 1em;
			margin-left: 3em;

			button {
				min-width: 10.5em;
			}
		}

		&.submit-enter {
			opacity: 0;
			max-height: 0;
			overflow: hidden;
		}

		&.submit-enter.submit-enter-active {
			opacity: 1;
			max-height: 16em;

			/* prettier-ignore */
			transition:
				opacity $duration-animation-default * 2,
				max-height $duration-animation-default * 2;
		}

		&.submit-leave {
			opacity: 1;
			max-height: 16em;
			overflow: hidden;
		}

		&.submit-leave.submit-leave-active {
			opacity: 0;
			max-height: 0;

			/* prettier-ignore */
			transition:
				opacity $duration-animation-default * 2,
				max-height $duration-animation-default * 2;
		}

		> .score {
			padding: 0;
			position: relative;
			text-align: left;
			padding-top: 1em;

			.feedback {
				min-height: 1em;
				margin-bottom: 1em;

				&::before {
					$color-feedback-text: transparentize($color-text, 0.5);

					content: 'Feedback:';
					font-family: var(--font-default);
					font-size: 0.7em;
					margin-left: 3em * (1 / 0.7);
					font-weight: bold;
					color: $color-feedback-text;
					display: block;
				}

				> .obojobo-draft--chunks--mc-assessment--mc-feedback {
					padding-top: 0;
					padding-bottom: 0;
					position: relative;
				}

				&.is-pick-all-feedback {
					> .obojobo-draft--chunks--mc-assessment--mc-feedback {
						padding-left: 4em;

						&::before {
							display: block;
							position: absolute;
							top: 1em;
							left: 4em;
							font-family: var(--font-default);
							font-size: 1em;
							letter-spacing: 0.25em;
						}

						&.is-correct-feedback::before {
							content: '✔' attr(data-choice-label);
							color: $color-correct;
						}

						&.is-not-correct-feedback::before {
							content: '✖' attr(data-choice-label);
							color: $color-incorrect;
						}
					}
				}
			}
		}

		.solution-container {
			background: $color-bg;
			text-align: left;
			padding: 0;
			margin-bottom: $dimension-padding / 3;
			margin-left: $dimension-padding / 3;
			margin-right: $dimension-padding / 3;
			border: 1px solid $color-shadow;

			&::before {
				$color-solution-label-text: transparentize($color-text, 0.25);

				content: 'Full explanation:';
				font-family: var(--font-default);
				font-size: 1em;
				font-weight: bold;
				color: $color-solution-label-text;
				margin-top: 1em;
				margin-left: 2em;
				margin-bottom: -1em;
				display: block;
				transform: scale(0.7);
				transform-origin: top left;
			}

			&.solution-enter {
				max-height: 0;
				overflow: hidden;
				border: 0 solid $color-transparent;
				margin-bottom: 0;
				opacity: 0;
			}

			&.solution-enter.solution-enter-active {
				max-height: 60em;
				margin-bottom: 1em;
				border: 1px solid $color-shadow;
				opacity: 1;

				/* prettier-ignore */
				transition:
					max-height $duration-animation-default * 2,
					margin-bottom $duration-animation-default * 2,
					border $duration-animation-default * 2,
					opacity $duration-animation-default * 2;
			}

			&.solution-leave {
				max-height: 60em;
				margin-bottom: 1em;
				border: 1px solid $color-shadow;
				overflow: hidden;
				opacity: 1;
			}

			&.solution-leave.solution-leave-active {
				max-height: 0;
				margin-bottom: 0;
				border: 0 solid $color-transparent;
				opacity: 0;

				/* prettier-ignore */
				transition:
					max-height $duration-animation-default * 2,
					margin-bottom $duration-animation-default * 2,
					border $duration-animation-default * 2,
					opacity $duration-animation-default * 2;
			}

			> .component {
				margin-left: -1em;
				margin-right: -1em;
			}
		}
	}

	.submit .obojobo-draft--components--button:first-child {
		margin-right: 1em;
	}

	&.is-scored {
		// These two rules, one for pick-all and one for the others, could be combined but
		// don't - IE11 has a bug that applies multiple sizes in pseudo elements :(
		&.is-response-type-pick-one .obojobo-draft--chunks--mc-assessment--mc-choice,
		&.is-response-type-pick-one-multiple-correct .obojobo-draft--chunks--mc-assessment--mc-choice {
			// Only show unchosen correct answers in review
			&.is-mode-review {
				&::before {
					content: none;
				}

				&.is-type-could-have-chosen {
					background: transparentize($color-alt-correct, 0.9);
				}

				&.is-type-should-have-chosen {
					background: transparentize($color-unchosen-correct, 0.9);
				}
			}

			&.is-type-chosen-correctly {
				// Do not include the checkmark on review
				&:not(.is-mode-review) {
					&::before {
						@include correct();
					}
				}

				background: transparentize($color-correct, 0.9);
			}

			&.is-type-should-not-have-chosen {
				// Do not include the x on review
				&:not(.is-mode-review) {
					&::before {
						@include incorrect();
					}
				}

				background: transparentize($color-incorrect, 0.9);
			}
		}

		&.is-response-type-pick-all .obojobo-draft--chunks--mc-assessment--mc-choice {
			@mixin smaller() {
				font-size: 1.25em;
				left: 1.25em;
				top: 1.5em;
				letter-spacing: 0.2em;
			}

			// stylelint disabled on these two rules due to https://github.com/stylelint/stylelint/issues/2489

			/* prettier-ignore */
			&.is-type-chosen-correctly { /* stylelint-disable-line no-descending-specificity */
				&:not(.is-mode-review) {
					&::before {
						@include correct();
						@include smaller();

						content: '✔' attr(data-choice-label);
					}
				}

				background: transparentize($color-correct, 0.9);
			}

			/* prettier-ignore */
			&.is-type-should-not-have-chosen { /* stylelint-disable-line no-descending-specificity */
				&:not(.is-mode-review) {
					&::before {
						@include incorrect();
						@include smaller();

						content: '✖' attr(data-choice-label);
					}
				}

				background: transparentize($color-incorrect, 0.9);
			}

			// Only show unchosen correct answers in review
			&.is-mode-review {
				&.is-type-should-have-chosen {
					background: transparentize($color-unchosen-correct, 0.9);
				}
			}
		}
	}

	&.is-mode-review {
		.result-container .result {
			animation: none;
		}
	}

	.obojobo-draft--chunks--mc-assessment--mc-choice--answer-flag {
		&::after {
			content: ' ';
			position: absolute;
			z-index: -1;
			left: 0;
			top: 50%;
			transform: translate(6.9em, -50%) rotate(45deg);
			width: 1.75em;
			height: 1.75em;
		}

		margin-left: -4.6em;
		position: absolute;
		color: $color-bg;
		width: 7.75em;
		text-align: center;
		border-radius: $dimension-rounded-radius;
		border-top-right-radius: 0;
		border-bottom-right-radius: 0;
		font-size: 0.65em;
		top: 50%;
		transform: translate(0, -50%);

		> p {
			margin: 0.25em;
			margin-left: 0;
			line-height: 1em;
			top: 50%;
		}

		&.is-type-chosen-correctly {
			background-color: $color-correct;

			&::after {
				background-color: $color-correct;
			}
		}

		&.is-type-should-not-have-chosen {
			background-color: $color-incorrect;

			&::after {
				background-color: $color-incorrect;
			}
		}

		&.is-type-should-have-chosen {
			background-color: $color-unchosen-correct;

			&::after {
				background-color: $color-unchosen-correct;
			}
		}

		&.is-type-could-have-chosen {
			background-color: $color-alt-correct;

			&::after {
				background-color: $color-alt-correct;
			}
		}
	}
}
